name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
      - cron: 0 0 * * 0

jobs:
  Qt:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        qt: [5.13.2]
        os: [ubuntu-latest, macos-latest, windows-2016]

    steps:
    - name: Clone repository
      uses: actions/checkout@v2
    - name: Install Qt (Linux|MacOS)
      if: (matrix.os == 'ubuntu-latest') || (matrix.os == 'macos-latest')
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
    - name: Install Qt (Windows)
      if: matrix.os == 'windows-2016'
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
        arch: win64_msvc2017_64
    - name: Install jom (Windows)
      if: matrix.os == 'windows-2016'
      run: |
        Invoke-WebRequest http://download.qt.io/official_releases/jom/jom.zip -OutFile .\jom.zip
        expand-archive -path "jom.zip" -destinationpath "$HOME\jom"
        echo "::add-path::$HOME\jom"
    - name: Configure and compile VESC Tool (MacOS)
      if: matrix.os == 'macos-latest'
      run: ./build_macos
    - name: Configure and compile VESC Tool (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        qmake -config release "CONFIG += release_lin build_platinum"
        make -j2
    - name: Configure and compile VESC Tool (Windows)
      if: matrix.os == 'windows-2016'
      run: .\build_win4CI.ps1
      shell: powershell
    - name: Upload vesc_tool-macOS
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v1
      with:
        name: vesc_tool-macOS
        path: build/macos
    - name: Upload vesc_tool-linux
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v1
      with:
        name: vesc_tool-linux
        path: build/lin/vesc_tool_1.29
    - name: Upload vesc_tool-win
      if: matrix.os == 'windows-2016'
      uses: actions/upload-artifact@v1
      with:
        name: vesc_tool-win
        path: build\win

    - name: Get Latest Tage Name
      if: startsWith(github.event.ref, 'refs/tags/')
      shell: pwsh
      env:
        githubFullName: ${{ github.event.repository.full_name }}
        upUrl: ${{ steps.queryReleaseMacos.outputs.upload_url }}
        ref: ${{ github.event.ref }}
      run: |
        if (${env:upUrl}.Length -gt 0) {
            $v=${env:upUrl}
            echo "::set-env name=uploadUrl::$v"
            return
        } 
        [string]$tag = ${env:ref}.Substring(${env:ref}.LastIndexOf('/') + 1)
        [string]$url = 'https://api.github.com/repos/' + ${env:githubFullName} + '/releases/tags/' + ${tag}
        $response = Invoke-RestMethod -Uri $url -Method Get
        [string]$latestUpUrl = $response.upload_url
        Write-Host 'latestUpUrl:'$latestUpUrl
        echo "::set-env name=uploadUrl::$latestUpUrl"
        Write-Host 'env uploadUrl:'${env:uploadUrl}
    - name: Upload Windows Asset
      id: upload-release-asset-win
      if: success() && startsWith(matrix.os, 'windows-') && startsWith(github.event.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ env.uploadUrl }}
        asset_path: .\build\win
        asset_name: vesc_tool-win.zip
        asset_content_type: application/zip