name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
      - cron: 0 0 * * 0

jobs:
  Qt:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        qt: [5.13.2]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Clone repository
      uses: actions/checkout@v2
    - name: Install Qt (Linux|MacOS)
      if: (matrix.os == 'ubuntu-latest') || (matrix.os == 'macos-latest')
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
    - name: Install Qt (Windows)
      if: matrix.os == 'windows-latest'
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
        arch: win64_msvc2017_64
    - name: Install jom (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Invoke-WebRequest http://download.qt.io/official_releases/jom/jom.zip -OutFile .\jom.zip
        expand-archive -path "jom.zip" -destinationpath "$HOME\jom"
        echo "::add-path::$HOME\jom"
    - name: Configure and compile VESC Tool (MacOS)
      if: matrix.os == 'macos-latest'
      run: ./build_macos
    - name: Configure and compile VESC Tool (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        qmake -config release "CONFIG += release_lin build_original"
        make -j2
    - name: Configure and compile VESC Tool (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $vcBaseDir = "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC"
        $env:Path += ";$vcBaseDir\Common7\Tools"
        # Using vcvarsall.bat from PowerShell is not straightforward - see
        # https://stackoverflow.com/questions/41399692/running-a-build-script-after-calling-vcvarsall-bat-from-powershell
        # Invokes a Cmd.exe shell script and updates the environment.
        function Invoke-CmdScript {
            param(
              [String] $scriptName
            )
            $cmdLine = """$scriptName"" $args & set"
            & $Env:SystemRoot\system32\cmd.exe /c $cmdLine |
            select-string '^([^=]*)=(.*)$' | foreach-object {
              $varName = $_.Matches[0].Groups[1].Value
              $varValue = $_.Matches[0].Groups[2].Value
              set-item Env:$varName $varValue
            }
        }
        Invoke-CmdScript "$vcBaseDir\Auxiliary\Build\vcvarsall.bat" amd64
        source ./build_win4CI.ps1
      shell: powershell
    - name: Upload vesc tool macOS dmg
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v1
      with:
        name: vesc_tool-macOS
        path: build/macos
    - name: Upload vesc_tool_1.29
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v1
      with:
        name: vesc_tool-lin
        path: build/lin/vesc_tool_1.29
    - name: Upload vesc_tool_win-amd64
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v1
      with:
        name: vesc_tool_win-amd64
        path: build\win
